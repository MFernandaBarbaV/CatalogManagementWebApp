//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CatalogManagement.DBModels
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CatalogManagementDBModel : DbContext
    {
        public CatalogManagementDBModel()
            : base("name=CatalogManagementDBModel")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<dUserProfiles> dUserProfiles { get; set; }
        public virtual DbSet<mAccessLog> mAccessLog { get; set; }
        public virtual DbSet<mAccessTemplates> mAccessTemplates { get; set; }
        public virtual DbSet<mApplications> mApplications { get; set; }
        public virtual DbSet<mOperations> mOperations { get; set; }
        public virtual DbSet<mProfiles> mProfiles { get; set; }
        public virtual DbSet<mStatus> mStatus { get; set; }
        public virtual DbSet<mStatusTypes> mStatusTypes { get; set; }
        public virtual DbSet<mUsers> mUsers { get; set; }
    
        public virtual int Configuration_GetForExport(string whereClause, string tableName)
        {
            var whereClauseParameter = whereClause != null ?
                new ObjectParameter("whereClause", whereClause) :
                new ObjectParameter("whereClause", typeof(string));
    
            var tableNameParameter = tableName != null ?
                new ObjectParameter("TableName", tableName) :
                new ObjectParameter("TableName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Configuration_GetForExport", whereClauseParameter, tableNameParameter);
        }
    
        public virtual int Delegation_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Delegation_GetAll");
        }
    
        public virtual int Sessions_Insert(Nullable<System.Guid> id, Nullable<int> userID, string ip)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(System.Guid));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var ipParameter = ip != null ?
                new ObjectParameter("ip", ip) :
                new ObjectParameter("ip", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sessions_Insert", idParameter, userIDParameter, ipParameter);
        }
    
        public virtual int spdProfileOperations_Delete(Nullable<int> profileID)
        {
            var profileIDParameter = profileID.HasValue ?
                new ObjectParameter("ProfileID", profileID) :
                new ObjectParameter("ProfileID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spdProfileOperations_Delete", profileIDParameter);
        }
    
        public virtual int spdProfileOperations_Insert(Nullable<int> profileID, Nullable<int> operationID)
        {
            var profileIDParameter = profileID.HasValue ?
                new ObjectParameter("ProfileID", profileID) :
                new ObjectParameter("ProfileID", typeof(int));
    
            var operationIDParameter = operationID.HasValue ?
                new ObjectParameter("OperationID", operationID) :
                new ObjectParameter("OperationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spdProfileOperations_Insert", profileIDParameter, operationIDParameter);
        }
    
        public virtual int spdUserDelegations_GetByUserID(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spdUserDelegations_GetByUserID", userIDParameter);
        }
    
        public virtual int spdUserProfiles_Delete(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spdUserProfiles_Delete", userIDParameter);
        }
    
        public virtual ObjectResult<spdUserProfiles_GetAll_Result> spdUserProfiles_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spdUserProfiles_GetAll_Result>("spdUserProfiles_GetAll");
        }
    
        public virtual ObjectResult<spdUserProfiles_GetByUserID_Result> spdUserProfiles_GetByUserID(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spdUserProfiles_GetByUserID_Result>("spdUserProfiles_GetByUserID", userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spdUserProfiles_Insert(Nullable<int> userID, Nullable<int> profileID, Nullable<int> accessTemplateID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var profileIDParameter = profileID.HasValue ?
                new ObjectParameter("ProfileID", profileID) :
                new ObjectParameter("ProfileID", typeof(int));
    
            var accessTemplateIDParameter = accessTemplateID.HasValue ?
                new ObjectParameter("AccessTemplateID", accessTemplateID) :
                new ObjectParameter("AccessTemplateID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spdUserProfiles_Insert", userIDParameter, profileIDParameter, accessTemplateIDParameter);
        }
    
        public virtual ObjectResult<spmAccessLog_Delete_Result> spmAccessLog_Delete(Nullable<int> accessLogID)
        {
            var accessLogIDParameter = accessLogID.HasValue ?
                new ObjectParameter("AccessLogID", accessLogID) :
                new ObjectParameter("AccessLogID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmAccessLog_Delete_Result>("spmAccessLog_Delete", accessLogIDParameter);
        }
    
        public virtual ObjectResult<spmAccessLog_GetAccessReport_Result> spmAccessLog_GetAccessReport(Nullable<int> applicationID, string usersIDs, string operationsIDs, string profilesIDs, Nullable<System.DateTime> creationDateStart, Nullable<System.DateTime> creationDateEnd)
        {
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            var usersIDsParameter = usersIDs != null ?
                new ObjectParameter("UsersIDs", usersIDs) :
                new ObjectParameter("UsersIDs", typeof(string));
    
            var operationsIDsParameter = operationsIDs != null ?
                new ObjectParameter("OperationsIDs", operationsIDs) :
                new ObjectParameter("OperationsIDs", typeof(string));
    
            var profilesIDsParameter = profilesIDs != null ?
                new ObjectParameter("ProfilesIDs", profilesIDs) :
                new ObjectParameter("ProfilesIDs", typeof(string));
    
            var creationDateStartParameter = creationDateStart.HasValue ?
                new ObjectParameter("CreationDateStart", creationDateStart) :
                new ObjectParameter("CreationDateStart", typeof(System.DateTime));
    
            var creationDateEndParameter = creationDateEnd.HasValue ?
                new ObjectParameter("CreationDateEnd", creationDateEnd) :
                new ObjectParameter("CreationDateEnd", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmAccessLog_GetAccessReport_Result>("spmAccessLog_GetAccessReport", applicationIDParameter, usersIDsParameter, operationsIDsParameter, profilesIDsParameter, creationDateStartParameter, creationDateEndParameter);
        }
    
        public virtual ObjectResult<spmAccessLog_GetAccessReportN_Result> spmAccessLog_GetAccessReportN(Nullable<int> applicationID, string usersIDs, string operationsIDs, string profilesIDs, Nullable<System.DateTime> creationDateStart, Nullable<System.DateTime> creationDateEnd, Nullable<int> pageNum, string sortExp, string sortDir)
        {
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            var usersIDsParameter = usersIDs != null ?
                new ObjectParameter("UsersIDs", usersIDs) :
                new ObjectParameter("UsersIDs", typeof(string));
    
            var operationsIDsParameter = operationsIDs != null ?
                new ObjectParameter("OperationsIDs", operationsIDs) :
                new ObjectParameter("OperationsIDs", typeof(string));
    
            var profilesIDsParameter = profilesIDs != null ?
                new ObjectParameter("ProfilesIDs", profilesIDs) :
                new ObjectParameter("ProfilesIDs", typeof(string));
    
            var creationDateStartParameter = creationDateStart.HasValue ?
                new ObjectParameter("CreationDateStart", creationDateStart) :
                new ObjectParameter("CreationDateStart", typeof(System.DateTime));
    
            var creationDateEndParameter = creationDateEnd.HasValue ?
                new ObjectParameter("CreationDateEnd", creationDateEnd) :
                new ObjectParameter("CreationDateEnd", typeof(System.DateTime));
    
            var pageNumParameter = pageNum.HasValue ?
                new ObjectParameter("PageNum", pageNum) :
                new ObjectParameter("PageNum", typeof(int));
    
            var sortExpParameter = sortExp != null ?
                new ObjectParameter("sortExp", sortExp) :
                new ObjectParameter("sortExp", typeof(string));
    
            var sortDirParameter = sortDir != null ?
                new ObjectParameter("sortDir", sortDir) :
                new ObjectParameter("sortDir", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmAccessLog_GetAccessReportN_Result>("spmAccessLog_GetAccessReportN", applicationIDParameter, usersIDsParameter, operationsIDsParameter, profilesIDsParameter, creationDateStartParameter, creationDateEndParameter, pageNumParameter, sortExpParameter, sortDirParameter);
        }
    
        public virtual ObjectResult<spmAccessLog_GetAll_Result> spmAccessLog_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmAccessLog_GetAll_Result>("spmAccessLog_GetAll");
        }
    
        public virtual ObjectResult<spmAccessLog_GetByFkProfileID_Result> spmAccessLog_GetByFkProfileID(Nullable<int> profileID)
        {
            var profileIDParameter = profileID.HasValue ?
                new ObjectParameter("ProfileID", profileID) :
                new ObjectParameter("ProfileID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmAccessLog_GetByFkProfileID_Result>("spmAccessLog_GetByFkProfileID", profileIDParameter);
        }
    
        public virtual ObjectResult<spmAccessLog_GetByFkUserID_Result> spmAccessLog_GetByFkUserID(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmAccessLog_GetByFkUserID_Result>("spmAccessLog_GetByFkUserID", userIDParameter);
        }
    
        public virtual ObjectResult<spmAccessLog_GetByID_Result> spmAccessLog_GetByID(Nullable<int> accessLogID)
        {
            var accessLogIDParameter = accessLogID.HasValue ?
                new ObjectParameter("AccessLogID", accessLogID) :
                new ObjectParameter("AccessLogID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmAccessLog_GetByID_Result>("spmAccessLog_GetByID", accessLogIDParameter);
        }
    
        public virtual ObjectResult<spmAccessLog_GetByProfileName_Result> spmAccessLog_GetByProfileName(string profileName)
        {
            var profileNameParameter = profileName != null ?
                new ObjectParameter("ProfileName", profileName) :
                new ObjectParameter("ProfileName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmAccessLog_GetByProfileName_Result>("spmAccessLog_GetByProfileName", profileNameParameter);
        }
    
        public virtual ObjectResult<spmAccessLog_GetByUserLogin_Result> spmAccessLog_GetByUserLogin(string userLogin)
        {
            var userLoginParameter = userLogin != null ?
                new ObjectParameter("UserLogin", userLogin) :
                new ObjectParameter("UserLogin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmAccessLog_GetByUserLogin_Result>("spmAccessLog_GetByUserLogin", userLoginParameter);
        }
    
        public virtual ObjectResult<spmAccessLog_GetByUserName_Result> spmAccessLog_GetByUserName(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmAccessLog_GetByUserName_Result>("spmAccessLog_GetByUserName", userNameParameter);
        }
    
        public virtual ObjectResult<spmAccessLog_GetLikeByProfileName_Result> spmAccessLog_GetLikeByProfileName(string profileName)
        {
            var profileNameParameter = profileName != null ?
                new ObjectParameter("ProfileName", profileName) :
                new ObjectParameter("ProfileName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmAccessLog_GetLikeByProfileName_Result>("spmAccessLog_GetLikeByProfileName", profileNameParameter);
        }
    
        public virtual ObjectResult<spmAccessLog_GetLikeByUserLogin_Result> spmAccessLog_GetLikeByUserLogin(string userLogin)
        {
            var userLoginParameter = userLogin != null ?
                new ObjectParameter("UserLogin", userLogin) :
                new ObjectParameter("UserLogin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmAccessLog_GetLikeByUserLogin_Result>("spmAccessLog_GetLikeByUserLogin", userLoginParameter);
        }
    
        public virtual ObjectResult<spmAccessLog_GetLikeByUserName_Result> spmAccessLog_GetLikeByUserName(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmAccessLog_GetLikeByUserName_Result>("spmAccessLog_GetLikeByUserName", userNameParameter);
        }
    
        public virtual int spmAccessLog_Insert(ObjectParameter accessLogID, Nullable<int> userID, string userName, Nullable<int> profileID, string profileName, Nullable<int> operationID, string userLogin, Nullable<int> applicationID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var profileIDParameter = profileID.HasValue ?
                new ObjectParameter("ProfileID", profileID) :
                new ObjectParameter("ProfileID", typeof(int));
    
            var profileNameParameter = profileName != null ?
                new ObjectParameter("ProfileName", profileName) :
                new ObjectParameter("ProfileName", typeof(string));
    
            var operationIDParameter = operationID.HasValue ?
                new ObjectParameter("OperationID", operationID) :
                new ObjectParameter("OperationID", typeof(int));
    
            var userLoginParameter = userLogin != null ?
                new ObjectParameter("UserLogin", userLogin) :
                new ObjectParameter("UserLogin", typeof(string));
    
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spmAccessLog_Insert", accessLogID, userIDParameter, userNameParameter, profileIDParameter, profileNameParameter, operationIDParameter, userLoginParameter, applicationIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spmAccessTemplates_Delete(Nullable<int> accessTemplateID)
        {
            var accessTemplateIDParameter = accessTemplateID.HasValue ?
                new ObjectParameter("AccessTemplateID", accessTemplateID) :
                new ObjectParameter("AccessTemplateID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spmAccessTemplates_Delete", accessTemplateIDParameter);
        }
    
        public virtual ObjectResult<spmAccessTemplates_GetAll_Result> spmAccessTemplates_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmAccessTemplates_GetAll_Result>("spmAccessTemplates_GetAll");
        }
    
        public virtual ObjectResult<spmAccessTemplates_GetByID_Result> spmAccessTemplates_GetByID(Nullable<int> accessTemplateID)
        {
            var accessTemplateIDParameter = accessTemplateID.HasValue ?
                new ObjectParameter("AccessTemplateID", accessTemplateID) :
                new ObjectParameter("AccessTemplateID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmAccessTemplates_GetByID_Result>("spmAccessTemplates_GetByID", accessTemplateIDParameter);
        }
    
        public virtual ObjectResult<spmAccessTemplates_GetByName_Result> spmAccessTemplates_GetByName(string accessTemplateName)
        {
            var accessTemplateNameParameter = accessTemplateName != null ?
                new ObjectParameter("AccessTemplateName", accessTemplateName) :
                new ObjectParameter("AccessTemplateName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmAccessTemplates_GetByName_Result>("spmAccessTemplates_GetByName", accessTemplateNameParameter);
        }
    
        public virtual int spmAccessTemplates_Insert(ObjectParameter accessTemplateID, string name, string monday, string tuesday, string wednesday, string thursday, string friday, string saturday, string sunday)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var mondayParameter = monday != null ?
                new ObjectParameter("Monday", monday) :
                new ObjectParameter("Monday", typeof(string));
    
            var tuesdayParameter = tuesday != null ?
                new ObjectParameter("Tuesday", tuesday) :
                new ObjectParameter("Tuesday", typeof(string));
    
            var wednesdayParameter = wednesday != null ?
                new ObjectParameter("Wednesday", wednesday) :
                new ObjectParameter("Wednesday", typeof(string));
    
            var thursdayParameter = thursday != null ?
                new ObjectParameter("Thursday", thursday) :
                new ObjectParameter("Thursday", typeof(string));
    
            var fridayParameter = friday != null ?
                new ObjectParameter("Friday", friday) :
                new ObjectParameter("Friday", typeof(string));
    
            var saturdayParameter = saturday != null ?
                new ObjectParameter("Saturday", saturday) :
                new ObjectParameter("Saturday", typeof(string));
    
            var sundayParameter = sunday != null ?
                new ObjectParameter("Sunday", sunday) :
                new ObjectParameter("Sunday", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spmAccessTemplates_Insert", accessTemplateID, nameParameter, mondayParameter, tuesdayParameter, wednesdayParameter, thursdayParameter, fridayParameter, saturdayParameter, sundayParameter);
        }
    
        public virtual int spmAccessTemplates_Update(Nullable<int> accessTemplateID, string name, string monday, string tuesday, string wednesday, string thursday, string friday, string saturday, string sunday)
        {
            var accessTemplateIDParameter = accessTemplateID.HasValue ?
                new ObjectParameter("AccessTemplateID", accessTemplateID) :
                new ObjectParameter("AccessTemplateID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var mondayParameter = monday != null ?
                new ObjectParameter("Monday", monday) :
                new ObjectParameter("Monday", typeof(string));
    
            var tuesdayParameter = tuesday != null ?
                new ObjectParameter("Tuesday", tuesday) :
                new ObjectParameter("Tuesday", typeof(string));
    
            var wednesdayParameter = wednesday != null ?
                new ObjectParameter("Wednesday", wednesday) :
                new ObjectParameter("Wednesday", typeof(string));
    
            var thursdayParameter = thursday != null ?
                new ObjectParameter("Thursday", thursday) :
                new ObjectParameter("Thursday", typeof(string));
    
            var fridayParameter = friday != null ?
                new ObjectParameter("Friday", friday) :
                new ObjectParameter("Friday", typeof(string));
    
            var saturdayParameter = saturday != null ?
                new ObjectParameter("Saturday", saturday) :
                new ObjectParameter("Saturday", typeof(string));
    
            var sundayParameter = sunday != null ?
                new ObjectParameter("Sunday", sunday) :
                new ObjectParameter("Sunday", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spmAccessTemplates_Update", accessTemplateIDParameter, nameParameter, mondayParameter, tuesdayParameter, wednesdayParameter, thursdayParameter, fridayParameter, saturdayParameter, sundayParameter);
        }
    
        public virtual int spmApplications_Delete(Nullable<int> applicationID)
        {
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spmApplications_Delete", applicationIDParameter);
        }
    
        public virtual ObjectResult<spmApplications_GetAll_Result> spmApplications_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmApplications_GetAll_Result>("spmApplications_GetAll");
        }
    
        public virtual ObjectResult<spmApplications_GetAllWithOperations_Result> spmApplications_GetAllWithOperations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmApplications_GetAllWithOperations_Result>("spmApplications_GetAllWithOperations");
        }
    
        public virtual ObjectResult<spmApplications_GetAllWithOperationsAndProfiles_Result> spmApplications_GetAllWithOperationsAndProfiles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmApplications_GetAllWithOperationsAndProfiles_Result>("spmApplications_GetAllWithOperationsAndProfiles");
        }
    
        public virtual ObjectResult<spmApplications_GetAllWithProfiles_Result> spmApplications_GetAllWithProfiles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmApplications_GetAllWithProfiles_Result>("spmApplications_GetAllWithProfiles");
        }
    
        public virtual ObjectResult<spmApplications_GetByID_Result> spmApplications_GetByID(Nullable<int> applicationID)
        {
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmApplications_GetByID_Result>("spmApplications_GetByID", applicationIDParameter);
        }
    
        public virtual ObjectResult<spmApplications_GetByIDWithProfiles_Result> spmApplications_GetByIDWithProfiles(Nullable<int> applicationID)
        {
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmApplications_GetByIDWithProfiles_Result>("spmApplications_GetByIDWithProfiles", applicationIDParameter);
        }
    
        public virtual ObjectResult<spmApplications_GetByName_Result> spmApplications_GetByName(string applicationName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmApplications_GetByName_Result>("spmApplications_GetByName", applicationNameParameter);
        }
    
        public virtual ObjectResult<spmApplications_GetByType_Result> spmApplications_GetByType(string applicationType)
        {
            var applicationTypeParameter = applicationType != null ?
                new ObjectParameter("ApplicationType", applicationType) :
                new ObjectParameter("ApplicationType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmApplications_GetByType_Result>("spmApplications_GetByType", applicationTypeParameter);
        }
    
        public virtual int spmApplications_Insert(ObjectParameter applicationID, string name, string type, string origin, Nullable<int> statusID, string version, Nullable<System.DateTime> releaseDate)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var originParameter = origin != null ?
                new ObjectParameter("Origin", origin) :
                new ObjectParameter("Origin", typeof(string));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var releaseDateParameter = releaseDate.HasValue ?
                new ObjectParameter("ReleaseDate", releaseDate) :
                new ObjectParameter("ReleaseDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spmApplications_Insert", applicationID, nameParameter, typeParameter, originParameter, statusIDParameter, versionParameter, releaseDateParameter);
        }
    
        public virtual int spmApplications_Update(Nullable<int> applicationID, string name, string type, string origin, Nullable<System.DateTime> releaseDate, string version, Nullable<int> statusID)
        {
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var originParameter = origin != null ?
                new ObjectParameter("Origin", origin) :
                new ObjectParameter("Origin", typeof(string));
    
            var releaseDateParameter = releaseDate.HasValue ?
                new ObjectParameter("ReleaseDate", releaseDate) :
                new ObjectParameter("ReleaseDate", typeof(System.DateTime));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spmApplications_Update", applicationIDParameter, nameParameter, typeParameter, originParameter, releaseDateParameter, versionParameter, statusIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spmOperations_Delete(Nullable<int> operationID)
        {
            var operationIDParameter = operationID.HasValue ?
                new ObjectParameter("OperationID", operationID) :
                new ObjectParameter("OperationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spmOperations_Delete", operationIDParameter);
        }
    
        public virtual ObjectResult<spmOperations_GetAll_Result> spmOperations_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmOperations_GetAll_Result>("spmOperations_GetAll");
        }
    
        public virtual ObjectResult<spmOperations_GetByApplicationID_Result> spmOperations_GetByApplicationID(Nullable<int> applicationID)
        {
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmOperations_GetByApplicationID_Result>("spmOperations_GetByApplicationID", applicationIDParameter);
        }
    
        public virtual ObjectResult<spmOperations_GetByID_Result> spmOperations_GetByID(Nullable<int> operationID)
        {
            var operationIDParameter = operationID.HasValue ?
                new ObjectParameter("OperationID", operationID) :
                new ObjectParameter("OperationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmOperations_GetByID_Result>("spmOperations_GetByID", operationIDParameter);
        }
    
        public virtual ObjectResult<spmOperations_GetByName_Result> spmOperations_GetByName(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmOperations_GetByName_Result>("spmOperations_GetByName", nameParameter);
        }
    
        public virtual ObjectResult<spmOperations_GetByNameAndApplicationID_Result> spmOperations_GetByNameAndApplicationID(string name, Nullable<int> applicationID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmOperations_GetByNameAndApplicationID_Result>("spmOperations_GetByNameAndApplicationID", nameParameter, applicationIDParameter);
        }
    
        public virtual ObjectResult<spmOperations_GetByProfileID_Result> spmOperations_GetByProfileID(Nullable<int> profileID)
        {
            var profileIDParameter = profileID.HasValue ?
                new ObjectParameter("ProfileID", profileID) :
                new ObjectParameter("ProfileID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmOperations_GetByProfileID_Result>("spmOperations_GetByProfileID", profileIDParameter);
        }
    
        public virtual ObjectResult<spmOperations_GetLikeByName_Result> spmOperations_GetLikeByName(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmOperations_GetLikeByName_Result>("spmOperations_GetLikeByName", nameParameter);
        }
    
        public virtual int spmOperations_Insert(ObjectParameter operationID, string name, Nullable<int> applicationID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spmOperations_Insert", operationID, nameParameter, applicationIDParameter);
        }
    
        public virtual int spmOperations_Update(Nullable<int> operationID, string name, Nullable<int> applicationID)
        {
            var operationIDParameter = operationID.HasValue ?
                new ObjectParameter("OperationID", operationID) :
                new ObjectParameter("OperationID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spmOperations_Update", operationIDParameter, nameParameter, applicationIDParameter);
        }
    
        public virtual int spmProfiles_Delete(Nullable<int> profileID)
        {
            var profileIDParameter = profileID.HasValue ?
                new ObjectParameter("ProfileID", profileID) :
                new ObjectParameter("ProfileID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spmProfiles_Delete", profileIDParameter);
        }
    
        public virtual ObjectResult<spmProfiles_GetAll_Result> spmProfiles_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmProfiles_GetAll_Result>("spmProfiles_GetAll");
        }
    
        public virtual ObjectResult<spmProfiles_GetAllWithOperations_Result> spmProfiles_GetAllWithOperations()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmProfiles_GetAllWithOperations_Result>("spmProfiles_GetAllWithOperations");
        }
    
        public virtual ObjectResult<spmProfiles_GetByApplicationID_Result> spmProfiles_GetByApplicationID(Nullable<int> applicationID)
        {
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmProfiles_GetByApplicationID_Result>("spmProfiles_GetByApplicationID", applicationIDParameter);
        }
    
        public virtual ObjectResult<spmProfiles_GetByID_Result> spmProfiles_GetByID(Nullable<int> profileID)
        {
            var profileIDParameter = profileID.HasValue ?
                new ObjectParameter("ProfileID", profileID) :
                new ObjectParameter("ProfileID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmProfiles_GetByID_Result>("spmProfiles_GetByID", profileIDParameter);
        }
    
        public virtual ObjectResult<spmProfiles_GetByName_Result> spmProfiles_GetByName(string profileName)
        {
            var profileNameParameter = profileName != null ?
                new ObjectParameter("ProfileName", profileName) :
                new ObjectParameter("ProfileName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmProfiles_GetByName_Result>("spmProfiles_GetByName", profileNameParameter);
        }
    
        public virtual ObjectResult<spmProfiles_GetByNameAndApplicationID_Result> spmProfiles_GetByNameAndApplicationID(string profileName, Nullable<int> applicationID)
        {
            var profileNameParameter = profileName != null ?
                new ObjectParameter("ProfileName", profileName) :
                new ObjectParameter("ProfileName", typeof(string));
    
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmProfiles_GetByNameAndApplicationID_Result>("spmProfiles_GetByNameAndApplicationID", profileNameParameter, applicationIDParameter);
        }
    
        public virtual int spmProfiles_Insert(ObjectParameter profileID, string name, Nullable<int> applicationID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spmProfiles_Insert", profileID, nameParameter, applicationIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spmProfiles_Update(Nullable<int> profileID, string name, Nullable<int> applicationID)
        {
            var profileIDParameter = profileID.HasValue ?
                new ObjectParameter("ProfileID", profileID) :
                new ObjectParameter("ProfileID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spmProfiles_Update", profileIDParameter, nameParameter, applicationIDParameter);
        }
    
        public virtual int spmStatus_Delete(Nullable<int> statusID)
        {
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spmStatus_Delete", statusIDParameter);
        }
    
        public virtual ObjectResult<spmStatus_GetAll_Result> spmStatus_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmStatus_GetAll_Result>("spmStatus_GetAll");
        }
    
        public virtual ObjectResult<spmStatus_GetByID_Result> spmStatus_GetByID(Nullable<int> statusID)
        {
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmStatus_GetByID_Result>("spmStatus_GetByID", statusIDParameter);
        }
    
        public virtual ObjectResult<spmStatus_GetByType_Result> spmStatus_GetByType(Nullable<int> type)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmStatus_GetByType_Result>("spmStatus_GetByType", typeParameter);
        }
    
        public virtual ObjectResult<spmStatus_Insert_Result> spmStatus_Insert(ObjectParameter statusID, string name, Nullable<int> type)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmStatus_Insert_Result>("spmStatus_Insert", statusID, nameParameter, typeParameter);
        }
    
        public virtual ObjectResult<spmStatus_Update_Result> spmStatus_Update(Nullable<int> statusID, string name, Nullable<int> type)
        {
            var statusIDParameter = statusID.HasValue ?
                new ObjectParameter("StatusID", statusID) :
                new ObjectParameter("StatusID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmStatus_Update_Result>("spmStatus_Update", statusIDParameter, nameParameter, typeParameter);
        }
    
        public virtual ObjectResult<spmStatusType_GetByID_Result> spmStatusType_GetByID(Nullable<int> type)
        {
            var typeParameter = type.HasValue ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmStatusType_GetByID_Result>("spmStatusType_GetByID", typeParameter);
        }
    
        public virtual int spmUser_ChangePasswordAtFirstSession(Nullable<int> userID, string currentPassword, string newPassword)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("userID", userID) :
                new ObjectParameter("userID", typeof(int));
    
            var currentPasswordParameter = currentPassword != null ?
                new ObjectParameter("currentPassword", currentPassword) :
                new ObjectParameter("currentPassword", typeof(string));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("newPassword", newPassword) :
                new ObjectParameter("newPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spmUser_ChangePasswordAtFirstSession", userIDParameter, currentPasswordParameter, newPasswordParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spmUser_Delete(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spmUser_Delete", userIDParameter);
        }
    
        public virtual ObjectResult<spmUser_DoLogin_Result> spmUser_DoLogin(string login, string password)
        {
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmUser_DoLogin_Result>("spmUser_DoLogin", loginParameter, passwordParameter);
        }
    
        public virtual int spmUser_DoLogout(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spmUser_DoLogout", userIDParameter);
        }
    
        public virtual ObjectResult<spmUser_GetAll_Result> spmUser_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmUser_GetAll_Result>("spmUser_GetAll");
        }
    
        public virtual ObjectResult<spmUser_GetAllWithProfiles_Result> spmUser_GetAllWithProfiles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmUser_GetAllWithProfiles_Result>("spmUser_GetAllWithProfiles");
        }
    
        public virtual ObjectResult<spmUser_GetByApplication_Result> spmUser_GetByApplication(Nullable<int> applicationID)
        {
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmUser_GetByApplication_Result>("spmUser_GetByApplication", applicationIDParameter);
        }
    
        public virtual ObjectResult<spmUser_GetByApplicationAndUser_Result> spmUser_GetByApplicationAndUser(Nullable<int> applicationID, Nullable<int> userID)
        {
            var applicationIDParameter = applicationID.HasValue ?
                new ObjectParameter("ApplicationID", applicationID) :
                new ObjectParameter("ApplicationID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmUser_GetByApplicationAndUser_Result>("spmUser_GetByApplicationAndUser", applicationIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<spmUser_GetByID_Result> spmUser_GetByID(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmUser_GetByID_Result>("spmUser_GetByID", userIDParameter);
        }
    
        public virtual ObjectResult<spmUser_GetLikeByEmail_Result> spmUser_GetLikeByEmail(string userEmail)
        {
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("UserEmail", userEmail) :
                new ObjectParameter("UserEmail", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmUser_GetLikeByEmail_Result>("spmUser_GetLikeByEmail", userEmailParameter);
        }
    
        public virtual ObjectResult<spmUser_GetLikeByLastName_Result> spmUser_GetLikeByLastName(string userLastName)
        {
            var userLastNameParameter = userLastName != null ?
                new ObjectParameter("UserLastName", userLastName) :
                new ObjectParameter("UserLastName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmUser_GetLikeByLastName_Result>("spmUser_GetLikeByLastName", userLastNameParameter);
        }
    
        public virtual ObjectResult<spmUser_GetLikeByLogin_Result> spmUser_GetLikeByLogin(string userLogin)
        {
            var userLoginParameter = userLogin != null ?
                new ObjectParameter("UserLogin", userLogin) :
                new ObjectParameter("UserLogin", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmUser_GetLikeByLogin_Result>("spmUser_GetLikeByLogin", userLoginParameter);
        }
    
        public virtual ObjectResult<spmUser_GetLikeByName_Result> spmUser_GetLikeByName(string userName)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmUser_GetLikeByName_Result>("spmUser_GetLikeByName", userNameParameter);
        }
    
        public virtual ObjectResult<spmUser_GetLikeByOrganization_Result> spmUser_GetLikeByOrganization(string userOrganization)
        {
            var userOrganizationParameter = userOrganization != null ?
                new ObjectParameter("UserOrganization", userOrganization) :
                new ObjectParameter("UserOrganization", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmUser_GetLikeByOrganization_Result>("spmUser_GetLikeByOrganization", userOrganizationParameter);
        }
    
        public virtual ObjectResult<spmUser_GetLikeByPosition_Result> spmUser_GetLikeByPosition(string userPosition)
        {
            var userPositionParameter = userPosition != null ?
                new ObjectParameter("UserPosition", userPosition) :
                new ObjectParameter("UserPosition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmUser_GetLikeByPosition_Result>("spmUser_GetLikeByPosition", userPositionParameter);
        }
    
        public virtual int spmUser_GetNameBySmartCardID(Nullable<int> smartCardID)
        {
            var smartCardIDParameter = smartCardID.HasValue ?
                new ObjectParameter("SmartCardID", smartCardID) :
                new ObjectParameter("SmartCardID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spmUser_GetNameBySmartCardID", smartCardIDParameter);
        }
    
        public virtual int spmUser_Insert(ObjectParameter userID, string name, string lastName, string surname, Nullable<int> sexID, string address, Nullable<int> zipCode, string email, string organization, string position, string shortName, string login, string password, Nullable<int> status)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var sexIDParameter = sexID.HasValue ?
                new ObjectParameter("SexID", sexID) :
                new ObjectParameter("SexID", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var zipCodeParameter = zipCode.HasValue ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var organizationParameter = organization != null ?
                new ObjectParameter("Organization", organization) :
                new ObjectParameter("Organization", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spmUser_Insert", userID, nameParameter, lastNameParameter, surnameParameter, sexIDParameter, addressParameter, zipCodeParameter, emailParameter, organizationParameter, positionParameter, shortNameParameter, loginParameter, passwordParameter, statusParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> spmUser_Update(Nullable<int> userID, string name, string lastName, string surname, Nullable<int> sexID, string address, Nullable<int> zipCode, string email, string organization, string position, string shortName, string login, string password, Nullable<int> status)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var surnameParameter = surname != null ?
                new ObjectParameter("Surname", surname) :
                new ObjectParameter("Surname", typeof(string));
    
            var sexIDParameter = sexID.HasValue ?
                new ObjectParameter("SexID", sexID) :
                new ObjectParameter("SexID", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var zipCodeParameter = zipCode.HasValue ?
                new ObjectParameter("ZipCode", zipCode) :
                new ObjectParameter("ZipCode", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var organizationParameter = organization != null ?
                new ObjectParameter("Organization", organization) :
                new ObjectParameter("Organization", typeof(string));
    
            var positionParameter = position != null ?
                new ObjectParameter("Position", position) :
                new ObjectParameter("Position", typeof(string));
    
            var shortNameParameter = shortName != null ?
                new ObjectParameter("ShortName", shortName) :
                new ObjectParameter("ShortName", typeof(string));
    
            var loginParameter = login != null ?
                new ObjectParameter("Login", login) :
                new ObjectParameter("Login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("spmUser_Update", userIDParameter, nameParameter, lastNameParameter, surnameParameter, sexIDParameter, addressParameter, zipCodeParameter, emailParameter, organizationParameter, positionParameter, shortNameParameter, loginParameter, passwordParameter, statusParameter);
        }
    
        public virtual ObjectResult<spmUsers_GetByEmailOnly_Result> spmUsers_GetByEmailOnly(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<spmUsers_GetByEmailOnly_Result>("spmUsers_GetByEmailOnly", emailParameter);
        }
    
        public virtual int spResetUserPasswordByEmail(string userEmail, string newPassword)
        {
            var userEmailParameter = userEmail != null ?
                new ObjectParameter("UserEmail", userEmail) :
                new ObjectParameter("UserEmail", typeof(string));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spResetUserPasswordByEmail", userEmailParameter, newPasswordParameter);
        }
    }
}
